Les requêtes ci-dessous ont été exécutées à partir du Mongo Shell
Il est possible de les exécuter en copiant et collant les requêtes en ligne de commande sur le Mongo Shell après lancement du serveur.
______________________________________________________________________________________________________________________________________
*************************************************************1ère REQUÊTE*************************************************************


Classement du nombre de chaînes youtube selon leur nombre de vidéos postées;
on filtre en ne considérant que les chaînes possédant au moins 200 vidéos sur leur chaîne;
et on ordonne par ordre croissant le nombre de vidéos par chaîne.


db.videos.aggregate([
	{
		$addFields: {
			"videoCountDouble": {$toDouble : "$videoCount"}
		}
	},
	{
		$match: {
			videoCountDouble: {$gte: 200}
		}
	},
	{
		$group: {
			"_id": {"nbVideo": {$toDouble: '$videoCount'}},
			"nbChannelCorrespondingToTheNumberOfVideos": {"$sum": 1}
		},
	},
	{$sort: {_id: 1}}
])


______________________________________________________________________________________________________________________________________
*************************************************************2ème REQUÊTE*************************************************************


Nombre de vidéos publiées par année; puis ordonné par année.


db.videos.aggregate([
	{$unwind: "$video"},
	{
		$group: {
			"_id": {"year": {$year: {$dateFromString: {dateString: '$video.videoPublished'}}}},
			"nbVideoForOneYear" : {"$sum": 1}
		}
	},
	{$sort: {_id: 1}}
])


______________________________________________________________________________________________________________________________________
***********************************************************2ème REQUÊTE bis***********************************************************


Variante avec publiées par mois; puis ordonné par mois.


db.videos.aggregate([
	{$unwind: "$video"},
	{
		$group: {
			"_id": {"month": {$month: {$dateFromString: {dateString: '$video.videoPublished'}}}},
			"nbVideoForOneMonth" : {"$sum": 1}
		}
	},
	{$sort: {_id: 1}}
])


______________________________________________________________________________________________________________________________________
*************************************************************3ème REQUÊTE*************************************************************


Classement des mots les plus utilisés dans les descriptions des chaînes youtube.


db.videos.aggregate([
	{
		$match: {
			"mot": {$ne: ""}
		}
	},
	{
		$group: {
			"_id": {"mot": {$split: ["$description", " "]}},
			"nbChannelWithMotInTheDescription" : {"$sum": 1}
		}
	},
	{$unwind: "$_id.mot"},
	{
		$group:{
			"_id": {"word": "$_id.mot"},
			"nbChannelUsingTheWordInTheirDescription": {"$sum": 1}
		}
	},
	{$sort: {nbChannelUsingTheWordInTheirDescription: -1}}
])


______________________________________________________________________________________________________________________________________
*************************************************************4ème REQUÊTE*************************************************************


Classement des chaînes avec le nombre de commentaires, qui sont dans le top commentaires,
et qui ont été publiés le même jour que le jour de publication de la vidéo.


db.videos.aggregate([
	{$unwind: "$video"},
	{$unwind: "$video.topComment"},
	{
		$group: {
			"_id": {"videoId" : '$video.videoId'},
			"nbCommPublished1TheSameDay": {
				$sum: {
					$cond: [
						{
							$and: [
								{$eq: [
									{$year: {$dateFromString: {dateString: '$video.topComment.publishedAt'}}},
									{$year: {$dateFromString: {dateString: '$video.videoPublished'}}}
								]},
								{$eq: [
									{$month: {$dateFromString: {dateString: '$video.topComment.publishedAt'}}},
									{$month: {$dateFromString: {dateString: '$video.videoPublished'}}}
								]},
								{$eq: [
									{$dayOfMonth: {$dateFromString: {dateString: '$video.topComment.publishedAt'}}},
									{$dayOfMonth: {$dateFromString: {dateString: '$video.videoPublished'}}}
								]}
							]
						},
						1,
						0
					]
				}
			}
		}
	},
	{$sort: {nbCommPublished1TheSameDay: -1}}
])


______________________________________________________________________________________________________________________________________
*************************************************************5ème REQUÊTE*************************************************************


Classement du nombre de chaîne par leurs nombre d'abonnés; classés par ordre croissant.


db.videos.aggregate([
	{
		$addFields: {
			"subscriberCountDouble": {$toDouble : "$subscriberCount"}
		}
	},
	{
		$group: {
			"_id": {"totalSubscribers": "$subscriberCountDouble"},
			"nbChannelWithThisNumberSubscribersCorresponding": {$sum: 1},
		}
	},
	{$sort: {_id: 1}}
])


______________________________________________________________________________________________________________________________________
*************************************************************6ème REQUÊTE*************************************************************

Recherche des chaînes populaires en développement, c'est à dire les chaînes ayant plus de 50 000 abonnés avec un ratio d'au minimum 
1 commentaire pour 1000 vues pour au moins une vidéo de la chaîne.

db.videos.aggregate([
    {$unwind: "$video"},
    {
        $addFields: {
            "subscriberCountDouble": {$toDouble : "$subscriberCount"}
        }
    },
    {
        $match: {
            "subscriberCountDouble": {"$gte": 50000},
            "video.VideoCommentCount": {"$ne": "0"}
        }
    },
    {
        $group:{
            "_id": {"numberOfViewsPerRatio": {
                $divide: [
                    {$toDouble : "$video.videoViewCount"},
                    {$multiply: [
                        {$toDouble: "$video.VideoCommentCount"},
                        1000
                    ]}
                ]    
            },
            "channelId": "$channelId"}
        }
    },
    {
        $match: {
            "_id.numberOfViewsPerRatio": {$gt: 1}
        }
    },
    {$sort: {_id: -1}}
])

______________________________________________________________________________________________________________________________________
*************************************************************7ème REQUÊTE*************************************************************

Affichage du nombre de vues totales par catégorie de vidéo (les catégories sont représentés par des entiers)


db.videos.aggregate([
    {$unwind: "$video"},
    {
        $group: {
            "_id": {
                vcat :  "$video.videoCategoryId" 
            },
            "nbVuesDeLaCategorie": {
                $sum: {$toLong : "$video.videoViewCount"}
            }
        }
    },
    {$sort: {nbVuesDeLaCategorie: -1}}
    
])


______________________________________________________________________________________________________________________________________
*************************************************************8ème REQUÊTE*************************************************************

Affichage du nombre moyen d'abonnés d'une chaîne 

db.videos.aggregate([
	{
		$group: {
			"_id": null,
			"MoyenneAbonnes" : { $avg: {$toDouble : "$subscriberCount"}}
		}
	}
])

______________________________________________________________________________________________________________________________________
*************************************************************9ème REQUÊTE*************************************************************

Affichage des 10 chaînes ayant le plus de vidéos renseignées dans le dataset


db.videos.aggregate([
	{
		$project: {
			_id : false,
			name: true ,
			"nbVideos" : { $size: { "$ifNull": [ "$video", [] ] }}
		}
	},
	{$sort: {nbVideos: -1}},
	{$limit : 10}
])


______________________________________________________________________________________________________________________________________
************************************************************10ème REQUÊTE*************************************************************

Affichage des chaînes ayant plus de 10 000 abonnés et ayant "The" dans leur nom de chaîne


db.videos.aggregate([
	{
        $addFields: {
            "subscriberCountLong": {$toLong : "$subscriberCount"}
        }
    },
	{$match : 
		{ $and : [
			{subscriberCountLong: {$gte: 10000 }},
			{name : /The/}
		]}
	},
	{
		$project: {
			_id: 0,
			name: 1,
			subscriberCount :1
		}
	}
])
